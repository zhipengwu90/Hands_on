image: openjdk:11-jdk #Defining the Docker Image
variables:

  # ANDROID_COMPILE_SDK is the version of Android you're compiling with.
  # It should match compileSdkVersion.
  ANDROID_COMPILE_SDK: "30"

  # ANDROID_BUILD_TOOLS is the version of the Android build tools you are using.
  # It should match buildToolsVersion.
  ANDROID_BUILD_TOOLS: "30.0.3"

  # It's what version of the command line tools we're going to download from the official site.
  # Official Site-> https://developer.android.com/studio/index.html
  # There, look down below at the cli tools only, sdk tools package is of format:
  #        commandlinetools-os_type-ANDROID_SDK_TOOLS_latest.zip
  # when the script was last modified for latest compileSdkVersion, it was which is written down below
  ANDROID_SDK_TOOLS: "7583922"



# Packages installation before running script
before_script:
  - apt-get --quiet update --yes
  - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1

  # Setup path as ANDROID_HOME for moving/exporting the downloaded sdk into it


  - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/commandlinetools-linux-${ANDROID_SDK_TOOLS}_latest.zip
  - unzip -d android-sdk-linux android-sdk.zip
    # create a new directory android-sdk-latest
  - mkdir android-sdk-latest; cd android-sdk-latest
  - mkdir cmdline-tools; cd cmdline-tools
    # create a new directory: android-sdk-latest/cmdline-tools/latest
  - mkdir latest
  - cd ../..
  # then move all files to new created latest directory
  - mv android-sdk-linux/cmdline-tools/* android-sdk-latest/cmdline-tools/latest
  - export ANDROID_HOME=$PWD/android-sdk-latest
  - export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$PATH



  - echo y | android-sdk-latest/cmdline-tools/latest/bin/sdkmanager "platform-tools" >/dev/null
  - echo y | android-sdk-latest/cmdline-tools/latest/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
  - export ANDROID_HOME=$PWD/android-sdk-linux
  - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/

  # temporarily disable checking for EPIPE error and use yes to accept all licenses
  - set +o pipefail
  - yes | android-sdk-latest/cmdline-tools/latest/bin/sdkmanager --licenses
  - set -o pipefail
  - curl -sL https://deb.nodesource.com/setup_18.x | bash #Add Node Repo
  - apt-get install -y nodejs #Install Node JS
  - npm install -g expo-cli #Install React-Native CLI
  - npm install #Install npm packages
 

  
stages:
  - test
  # - deploy



test_job:
    stage: test
    script:
        - npm run test
        # install nodejs
        - echo 'test successull'

# deploy_job:
#   stage: deploy
#   script:
#     - - echo 'deploy successull'